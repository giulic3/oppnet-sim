[General]
network = OppNet
sim-time-limit = 10h

# debug-on-errors = true
record-eventlog = true
repeat = 20 # specify how many times a run needs to be repeated
#seed-set = ${runnumber} # default: different seed for each run
# or use this if you want that runs with the same repetition value have same seed
# seed-set = ${repetition}
# or manually select seeds
# seed-set = ${17, 11} # funziona perfetto
seed-set = ${17}
# seed-set = ${0} # 41,42, 53,0  per dimostrare che con 2.5 non ce la fa
OppNet.source.interArrivalTime = exponential(${10,5,2.5}s)
# OppNet.source.interArrivalTime = exponential(5s)

OppNet.S.serviceTime = exponential(1s) 
OppNet.Q3.serviceTime = exponential(0.8s)

OppNet.S.switchOverTime = exponential(1.1s)
OppNet.S.Q1visitTime = exponential(1.3s) 
# OppNet.S.Q1visitTime = exponential(5s) # prova
OppNet.S.Q2visitTime = exponential(1.6s)

OppNet.S.fetchingAlgorithm = "priority"

# Config for statistics collection
**.sink.totalServiceTime.result-recording-modes = +vector

**.Q1.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q1.queueingTime.result-recording-modes = +vector, -mean, -max

**.Q2.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q2.queueingTime.result-recording-modes = +vector, -mean, -max

**.Q3.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q3.queueingTime.result-recording-modes = +vector, -mean, -max
