[Config PreliminarySimulation]
network = OppNet
sim-time-limit = 3200s

# debug-on-errors = true
# record-eventlog = true
#repeat = 5
seed-set = ${11, 17, 53} # if 'seed-set' is specified manually, 'repeat' must be left out
OppNet.source.interArrivalTime = exponential(${10,5,2.5}s)

OppNet.S.serviceTime = exponential(1s) 
OppNet.Q3.serviceTime = exponential(0.8s)

OppNet.S.switchOverTime = exponential(1.1s)
OppNet.S.Q1visitTime = exponential(1.3s) 
OppNet.S.Q2visitTime = exponential(1.6s)

# Config for statistics collection
**.sink.totalServiceTime.result-recording-modes = +vector

**.Q1.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q1.queueingTime.result-recording-modes = +vector, -mean, -max

**.Q2.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q2.queueingTime.result-recording-modes = +vector, -mean, -max

**.Q3.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q3.queueingTime.result-recording-modes = +vector, -mean, -max

[Config BatchSimulation]

network = OppNet
warmup-period = 800s
sim-time-limit = 100000s # simtime is ten times the warmup

# debug-on-errors = true
# record-eventlog = true
# repeat = 1
seed-set = ${11}
OppNet.source.interArrivalTime = exponential(${10,5,2.5}s)

OppNet.S.serviceTime = exponential(1s) 
OppNet.Q3.serviceTime = exponential(0.8s)

OppNet.S.switchOverTime = exponential(1.1s)
OppNet.S.Q1visitTime = exponential(1.3s) 
OppNet.S.Q2visitTime = exponential(1.6s)

# Config for statistics collection
**.sink.totalServiceTime.result-recording-modes = +vector

**.Q1.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q1.queueingTime.result-recording-modes = +vector, -mean, -max

**.Q2.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q2.queueingTime.result-recording-modes = +vector, -mean, -max

**.Q3.queueLength.result-recording-modes = +vector, -timeavg, -max
**.Q3.queueingTime.result-recording-modes = +vector, -mean, -max